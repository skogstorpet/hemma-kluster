---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      chart: grafana
      version: 6.50.8
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 5m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  dependsOn:
    - name: postgres
      namespace: database
  uninstall:
    keepHistory: false
  values:
    replicas: 2
    rbac:
      pspEnabled: false
    podAnnotations:
      configmap.reloader.stakater.com/reload: "grafana"
    testFramework:
      enabled: false
    admin:
      existingSecret: grafana-secret
    envFromSecrets:
      - name: grafana
    grafana.ini:
      auth.basic:
        enabled: true
        disable_login_form: false
      auth.anonymous:
        enabled: true
        org_name: HomeCluster
        org_id: 1
        org_role: Viewer
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
    datasources:
      datasources.yaml:
        apiVersion: 1
        # list of datasources that should be deleted from the database
        # deleteDatasources:
        #  - name: Loki
        #    orgId: 1
        #  - name: Alertmanager
        #    orgId: 1
        datasources:
          - name: Prometheus
            isDefault: true
            type: prometheus
            access: proxy
            url: http://prometheus-operated:9090/
          - name: Thanos
            type: prometheus
            access: proxy
            url: http://thanos-query:9090
          - name: Loki
            type: loki
            access: proxy
            url: http://loki-gateway:80
          - name: Alertmanager
            type: alertmanager
            access: proxy
            url: http://kube-prometheus-stack-alertmanager:9093
            jsonData:
              implementation: prometheus
    dashboards:
      default:
        # Ref: https://grafana.com/grafana/dashboards/2842
        # ceph-cluster:
        #  gnetId: 2842
        #  revision: 16
        #  datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/5336
        # ceph-osd:
        #  gnetId: 5336
        #  revision: 5
        #  datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/5342
        # ceph-pools:
        #  gnetId: 5342
        #  revision: 5
        #  datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/1860
        nodeexporter:
          gnetId: 1860
          revision: 23
          datasource: Prometheus
        blackbox:
          url: https://raw.githubusercontent.com/jr0dd/grafana-dashboards/main/blackbox.json
          datasource: Prometheus
        # qbittorrent:
        #  url: https://raw.githubusercontent.com/esanchezm/prometheus-qbittorrent-exporter/master/grafana/dashboard.json
        #  datasource: Prometheus
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/logs.json
          datasource: Prometheus
        kubernetes-api-server:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-api-server.json
          datasource: Prometheus
        kubernetes-coredns:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-coredns.json
          datasource: Prometheus
        kubernetes-global:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-global.json
          datasource: Prometheus
        kubernetes-namespaces:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-namespaces.json
          datasource: Prometheus
        kubernetes-nodes:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-nodes.json
          datasource: Prometheus
        kubernetes-pods:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-pods.json
          datasource: Prometheus
        openhab:
          url: https://github.com/openhab/openhab-addons/blob/main/bundles/org.openhab.io.metrics/doc/dashboard.json
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
      datasources:
        enabled: true
        searchNamespace: ALL
    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
    serviceMonitor:
      enabled: true

    imageRenderer:
      enabled: true
      replicas: 2
      networkPolicy:
        limitIngress: false
      serviceMonitor:
        enabled: true

    ingress:
      enabled: true
      ingressClassName: "nginx"
      annotations:
        external-dns.home.arpa/enabled: "true"
        external-dns.target/enabled: "true"
        external-dns-cf/is-dns-public: "true"
      hosts:
        - "grafana.${SECRET_DOMAIN}"
      tls:
        - hosts:
            - "grafana.${SECRET_DOMAIN}"
    serviceAccount:
      create: true
      autoMount: true

    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values: ["grafana"]
              topologyKey: kubernetes.io/hostname

    persistence:
      enabled: false
      storageClassName: longhorn
      size: 10Gi
      accessModes:
        - ReadWriteOnce
