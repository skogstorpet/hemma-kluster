---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      chart: grafana
      version: 6.50.8
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 5m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    replicas: 2
    rbac:
      pspEnabled: false
    podAnnotations:
      configmap.reloader.stakater.com/reload: "grafana"
    testFramework:
      enabled: false
    admin:
      existingSecret: grafana-secret
    envFromSecrets:
      - name: grafana-secret
    env:
      GF_DEFAULT_TIMEZONE: browser
      GF_DATE_FORMATS_FULL_DATE: "MMM Do, YYYY hh:mm:ss a"
      GF_DATE_FORMATS_INTERVAL_SECOND: "hh:mm:ss a"
      GF_DATE_FORMATS_INTERVAL_MINUTE: "hh:mm a"
      GF_DATE_FORMATS_INTERVAL_HOUR: "DD/MM hh:mm a"
      GF_DATE_FORMATS_INTERVAL_DAY: "DD/MM"
      GF_DATE_FORMATS_INTERVAL_MONTH: "MM-YYYY"
      GF_DATE_FORMATS_INTERVAL_YEAR: "YYYY"
      # GF_AUTH_GOOGLE_CLIENT_ID: "${SECRET_GOOGLE_OAUTH_CLIENT_ID}"
      # GF_AUTH_GOOGLE_CLIENT_SECRET: "${SECRET_GOOGLE_OAUTH_CLIENT_SECRET}"
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_GRAFANA_NET_URL: https://grafana.net
      GF_LOG_FILTERS: rendering:debug
      GF_LOG_MODE: console
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_PATHS_DATA: /var/lib/grafana/data
      GF_PATHS_LOGS: /var/log/grafana
      GF_PATHS_PLUGINS: /var/lib/grafana/plugins
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_ALLOW_EMBEDDING: true
      GF_SECURITY_COOKIE_SAMESITE: grafana
    grafana.ini:
      server:
        root_url: "https://grafana.${SECRET_DOMAIN}"
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      analytics:
        check_for_updates: false
      log:
        mode: console
      grafana_net:
        url: https://grafana.net
      auth:
        oauth_auto_login: false
      users:
        auto_assign_org: false
        auto_assign_org_role: Admin
      auth.basic:
        enabled: true
        disable_login_form: false
      auth.anonymous:
        enabled: true
        org_name: HomeCluster
        org_id: 1
        org_role: Viewer
      auth.google:
        enabled: false
        scopes: "https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
        auth_url: "https://accounts.google.com/o/oauth2/auth"
        token_url: "https://accounts.google.com/o/oauth2/token"
        allowed_domains: "${SECRET_DOMAIN}"
        allow_sign_up: true
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
    datasources:
      datasources.yaml:
        apiVersion: 1
        # list of datasources that should be deleted from the database
        # deleteDatasources:
        #  - name: Loki
        #    orgId: 1
        #  - name: Alertmanager
        #    orgId: 1
        datasources:
          - name: Prometheus
            isDefault: true
            type: prometheus
            access: proxy
            url: http://prometheus-operated:9090/
          - name: Thanos
            type: prometheus
            access: proxy
            url: http://thanos-query:9090
          - name: Loki
            type: loki
            access: proxy
            url: http://loki-gateway:80
          - name: Alertmanager
            type: alertmanager
            access: proxy
            url: http://kube-prometheus-stack-alertmanager:9093
            jsonData:
              implementation: prometheus
    dashboards:
      default:
        # Ref: https://grafana.com/grafana/dashboards/2842
        # ceph-cluster:
        #  gnetId: 2842
        #  revision: 16
        #  datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/5336
        # ceph-osd:
        #  gnetId: 5336
        #  revision: 5
        #  datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/5342
        # ceph-pools:
        #  gnetId: 5342
        #  revision: 5
        #  datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/1860
        nodeexporter:
          gnetId: 1860
          revision: 23
          datasource: Prometheus
        blackbox:
          url: https://raw.githubusercontent.com/jr0dd/grafana-dashboards/main/blackbox.json
          datasource: Prometheus
        # qbittorrent:
        #  url: https://raw.githubusercontent.com/esanchezm/prometheus-qbittorrent-exporter/master/grafana/dashboard.json
        #  datasource: Prometheus
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/logs.json
          datasource: Prometheus
        kubernetes-api-server:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-api-server.json
          datasource: Prometheus
        kubernetes-coredns:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-coredns.json
          datasource: Prometheus
        kubernetes-global:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-global.json
          datasource: Prometheus
        kubernetes-namespaces:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-namespaces.json
          datasource: Prometheus
        kubernetes-nodes:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-nodes.json
          datasource: Prometheus
        kubernetes-pods:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-pods.json
          datasource: Prometheus
        openhab:
          url: https://github.com/openhab/openhab-addons/blob/main/bundles/org.openhab.io.metrics/doc/dashboard.json
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
      datasources:
        enabled: true
        searchNamespace: ALL
    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
    serviceMonitor:
      enabled: true

    imageRenderer:
      enabled: true
      replicas: 2
      networkPolicy:
        limitIngress: false
      serviceMonitor:
        enabled: true

    ingress:
      enabled: true
      ingressClassName: "nginx"
      annotations:
        external-dns.home.arpa/enabled: "true"
        external-dns.target/enabled: "true"
        external-dns-cf/is-dns-public: "true"
      hosts:
        - "grafana.${SECRET_DOMAIN}"
      tls:
        - hosts:
            - "grafana.${SECRET_DOMAIN}"
    serviceAccount:
      create: true
      autoMount: true

    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values: ["grafana"]
              topologyKey: kubernetes.io/hostname

    persistence:
      enabled: false
      storageClassName: longhorn
      size: 10Gi
      accessModes:
        - ReadWriteOnce
